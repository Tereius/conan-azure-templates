parameters:
  conanEnv: {}

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: "3.x"
    addToPath: true
    architecture: "x64"

- script: |
    pip install conan
    conan user
  displayName: 'Install conan'
  
- task: PythonScript@0
  env: ${{ parameters.conanEnv }}
  inputs:
      scriptSource: inline
      script: |
        from subprocess import check_output
        import os
        import random
        import string

        def randomString(stringLength=10):
            letters = string.ascii_lowercase
            return ''.join(random.choice(letters) for i in range(stringLength))

        if __name__ == "__main__":

            user_name = "user"
            user_channel = "testing"
            if 'CONAN_USERNAME' in os.environ:
                user_name = os.environ['CONAN_USERNAME']

            if 'CONAN_CHANNEL' in os.environ:
                user_channel = os.environ['CONAN_CHANNEL']
            
            if not 'CONAN_UPLOAD' in os.environ:
                print('Missing "CONAN_UPLOAD" env. variable')
                quit(1)

            rep_name = randomString()

            print("Adding remote for upload: " + os.environ['CONAN_UPLOAD'])
            check_output(["conan", "remote", "add", "-f", rep_name, os.environ['CONAN_UPLOAD']])
            try:
                check_output(["conan", "user", "-p", os.environ['CONAN_PASSWORD'], "-r", rep_name, os.environ['CONAN_LOGIN_USERNAME']])
            except:
                print("Warning: Couldn't set user credentials for remote")
            version = check_output(["conan", "inspect", ".", "-a", "version"]).decode("ascii").rstrip()
            name = check_output(["conan", "inspect", ".", "-a", "name"]).decode("ascii").rstrip()
            package_ref = "%s/%s" % (user_name, user_channel)
            package_name = "%s/%s@%s" % (name[6:], version[9:], package_ref)
            print("Exporting recipe with reference: " + package_ref)
            check_output(["conan", "export", ".", package_ref])
            print("Uploading recipe: " + package_name)
            check_output(["conan", "upload", package_name, "-r", rep_name])
